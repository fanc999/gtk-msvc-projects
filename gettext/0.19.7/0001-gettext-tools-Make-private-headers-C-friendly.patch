From 53ecd112b31487cc71ad89255229abf6867d527a Mon Sep 17 00:00:00 2001
From: Chun-wei Fan <fanchunwei@src.gnome.org>
Date: Wed, 6 Apr 2016 17:21:42 +0800
Subject: [PATCH] gettext-tools: Make private headers C++ friendly

There are some sources that must be built under C++ mode under Visual
Studio, but the headers need to use extern "C" so that the symbols can
be found without worrying about name mangling under C++, otherwise we
get linker errors as a result.
---
 gettext-tools/gnulib-lib/ostream.h        | 17 +++++++++++++++--
 gettext-tools/gnulib-lib/styled-ostream.h | 13 +++++++++++++
 gettext-tools/src/read-po.h               | 17 +++++++++++++++++
 gettext-tools/src/write-properties.h      | 17 +++++++++++++++++
 gettext-tools/src/write-stringtable.h     | 17 +++++++++++++++++
 5 files changed, 79 insertions(+), 2 deletions(-)

diff --git a/gettext-tools/gnulib-lib/ostream.h b/gettext-tools/gnulib-lib/ostream.h
index 7fc6979..ebfc5c0 100644
--- a/gettext-tools/gnulib-lib/ostream.h
+++ b/gettext-tools/gnulib-lib/ostream.h
@@ -108,11 +108,24 @@ ostream_free (ostream_t first_arg)
 
 #endif
 
-extern const typeinfo_t ostream_typeinfo;
+#ifdef __cplusplus
+extern "C" {
+#endif
+extern DLL_VARIABLE const typeinfo_t ostream_typeinfo;
+#ifdef __cplusplus
+}
+#endif
+
 #define ostream_SUPERCLASSES &ostream_typeinfo, NULL
 #define ostream_SUPERCLASSES_LENGTH (1 + 1)
 
-extern const struct ostream_implementation ostream_vtable;
+#ifdef __cplusplus
+extern "C" {
+#endif
+extern DLL_VARIABLE const struct ostream_implementation ostream_vtable;
+#ifdef __cplusplus
+}
+#endif
 
 #line 41 "ostream.oo.h"
 
diff --git a/gettext-tools/gnulib-lib/styled-ostream.h b/gettext-tools/gnulib-lib/styled-ostream.h
index 3fbc60f..faf4310 100644
--- a/gettext-tools/gnulib-lib/styled-ostream.h
+++ b/gettext-tools/gnulib-lib/styled-ostream.h
@@ -132,11 +132,24 @@ styled_ostream_end_use_class (styled_ostream_t first_arg, const char *classname)
 
 #endif
 
+#ifdef __cplusplus
+extern "C" {
+#endif
 extern DLL_VARIABLE const typeinfo_t styled_ostream_typeinfo;
+#ifdef __cplusplus
+}
+#endif
+
 #define styled_ostream_SUPERCLASSES &styled_ostream_typeinfo, ostream_SUPERCLASSES
 #define styled_ostream_SUPERCLASSES_LENGTH (1 + ostream_SUPERCLASSES_LENGTH)
 
+#ifdef __cplusplus
+extern "C" {
+#endif
 extern DLL_VARIABLE const struct styled_ostream_implementation styled_ostream_vtable;
+#ifdef __cplusplus
+}
+#endif
 
 #line 42 "styled-ostream.oo.h"
 
diff --git a/gettext-tools/src/read-po.h b/gettext-tools/src/read-po.h
index aa9c173..e31c4a8 100644
--- a/gettext-tools/src/read-po.h
+++ b/gettext-tools/src/read-po.h
@@ -20,7 +20,24 @@
 
 #include "read-catalog-abstract.h"
 
+#ifdef _MSC_VER
+# if !defined (GETTEXT_STATIC) && defined (IN_GETTEXTSRC)
+#  ifdef DLL_VARIABLE
+#   undef DLL_VARIABLE
+#  endif
+#  define DLL_VARIABLE __declspec(dllexport)
+# endif
+#endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 /* Describes a .po / .pot file parser.  */
 extern DLL_VARIABLE const struct catalog_input_format input_format_po;
 
+#ifdef __cplusplus
+}
+#endif
+
 #endif /* _READ_PO_H */
diff --git a/gettext-tools/src/write-properties.h b/gettext-tools/src/write-properties.h
index b29154e..500c2fa 100644
--- a/gettext-tools/src/write-properties.h
+++ b/gettext-tools/src/write-properties.h
@@ -20,7 +20,24 @@
 
 #include "write-catalog.h"
 
+#ifdef _MSC_VER
+# if !defined (GETTEXT_STATIC) && defined (IN_GETTEXTSRC)
+#  ifdef DLL_VARIABLE
+#   undef DLL_VARIABLE
+#  endif
+#  define DLL_VARIABLE __declspec(dllexport)
+# endif
+#endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 /* Describes a PO file in Java .properties syntax.  */
 extern DLL_VARIABLE const struct catalog_output_format output_format_properties;
 
+#ifdef __cplusplus
+}
+#endif
+
 #endif /* _WRITE_PROPERTIES_H */
diff --git a/gettext-tools/src/write-stringtable.h b/gettext-tools/src/write-stringtable.h
index 4e60dc2..1858476 100644
--- a/gettext-tools/src/write-stringtable.h
+++ b/gettext-tools/src/write-stringtable.h
@@ -20,7 +20,24 @@
 
 #include "write-catalog.h"
 
+#ifdef _MSC_VER
+# if !defined (GETTEXT_STATIC) && defined (IN_GETTEXTSRC)
+#  ifdef DLL_VARIABLE
+#   undef DLL_VARIABLE
+#  endif
+#  define DLL_VARIABLE __declspec(dllexport)
+# endif
+#endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 /* Describes a PO file in .strings syntax.  */
 extern DLL_VARIABLE const struct catalog_output_format output_format_stringtable;
 
+#ifdef __cplusplus
+}
+#endif
+
 #endif /* _WRITE_STRINGTABLE_H */
-- 
2.7.1.windows.2

