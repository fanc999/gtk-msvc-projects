--- a/libtextstyle/lib/stat.c	2020-05-11 15:31:23.451977300 +0800
+++ b/libtextstyle/lib/stat.c	2020-05-11 15:31:29.518120400 +0800
@@ -83,8 +83,9 @@
       if (q > p && *q != '\0')
         {
           /* Found the next slash at q.  */
+          const char *r;
           q++;
-          const char *r = q;
+
           while (*r != '\0' && !ISSLASH (*r))
             r++;
           if (r > q && *r == '\0')
@@ -105,6 +106,13 @@
 rpl_stat (char const *name, struct stat *buf)
 {
 #ifdef WINDOWS_NATIVE
+  size_t len;
+  size_t drive_prefix_len;
+  size_t rlen;
+  bool check_dir;
+  const char *rname;
+  char *malloca_rname;
+
   /* Fill the fields ourselves, because the original stat function returns
      values for st_atime, st_mtime, st_ctime that depend on the current time
      zone.  See
@@ -123,13 +131,12 @@
         name++;
     }
 
-  size_t len = strlen (name);
-  size_t drive_prefix_len = (HAS_DEVICE (name) ? 2 : 0);
+  len = strlen (name);
+  drive_prefix_len = (HAS_DEVICE (name) ? 2 : 0);
 
   /* Remove trailing slashes (except the very first one, at position
      drive_prefix_len), but remember their presence.  */
-  size_t rlen;
-  bool check_dir = false;
+  check_dir = false;
 
   rlen = len;
   while (rlen > drive_prefix_len && ISSLASH (name[rlen-1]))
@@ -154,8 +161,6 @@
       return -1;
     }
 
-  const char *rname;
-  char *malloca_rname;
   if (rlen == len)
     {
       rname = name;
@@ -223,6 +228,9 @@
     /* Fallback.  */
     {
       /* Approach based on the directory entry.  */
+      WIN32_FIND_DATA info;
+      HANDLE h;
+	  unsigned int mode;
 
       if (strchr (rname, '?') != NULL || strchr (rname, '*') != NULL)
         {
@@ -243,8 +251,7 @@
          <https://docs.microsoft.com/en-us/windows/desktop/api/fileapi/nf-fileapi-findfirstfileexa>
          <https://docs.microsoft.com/en-us/windows/desktop/api/minwinbase/ne-minwinbase-findex_info_levels>
          <https://docs.microsoft.com/en-us/windows/desktop/api/minwinbase/ns-minwinbase-_win32_find_dataa>  */
-      WIN32_FIND_DATA info;
-      HANDLE h = FindFirstFile (rname, &info);
+      h = FindFirstFile (rname, &info);
       if (h == INVALID_HANDLE_VALUE)
         goto failed;
 
@@ -273,7 +280,7 @@
 # endif
 
       /* st_mode.  */
-      unsigned int mode =
+      mode =
         /* XXX How to handle FILE_ATTRIBUTE_REPARSE_POINT ?  */
         ((info.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) ? _S_IFDIR | S_IEXEC_UGO : _S_IFREG)
         | S_IREAD_UGO

--- a/gettext-runtime/gnulib-lib/stat.c	2020-05-11 15:31:23.451977300 +0800
+++ b/gettext-runtime/gnulib-lib/stat.c	2020-05-11 15:31:29.518120400 +0800
@@ -83,8 +83,9 @@
       if (q > p && *q != '\0')
         {
           /* Found the next slash at q.  */
+          const char *r;
           q++;
-          const char *r = q;
+
           while (*r != '\0' && !ISSLASH (*r))
             r++;
           if (r > q && *r == '\0')
@@ -105,6 +106,13 @@
 rpl_stat (char const *name, struct stat *buf)
 {
 #ifdef WINDOWS_NATIVE
+  size_t len;
+  size_t drive_prefix_len;
+  size_t rlen;
+  bool check_dir;
+  const char *rname;
+  char *malloca_rname;
+
   /* Fill the fields ourselves, because the original stat function returns
      values for st_atime, st_mtime, st_ctime that depend on the current time
      zone.  See
@@ -123,13 +131,12 @@
         name++;
     }
 
-  size_t len = strlen (name);
-  size_t drive_prefix_len = (HAS_DEVICE (name) ? 2 : 0);
+  len = strlen (name);
+  drive_prefix_len = (HAS_DEVICE (name) ? 2 : 0);
 
   /* Remove trailing slashes (except the very first one, at position
      drive_prefix_len), but remember their presence.  */
-  size_t rlen;
-  bool check_dir = false;
+  check_dir = false;
 
   rlen = len;
   while (rlen > drive_prefix_len && ISSLASH (name[rlen-1]))
@@ -154,8 +161,6 @@
       return -1;
     }
 
-  const char *rname;
-  char *malloca_rname;
   if (rlen == len)
     {
       rname = name;
@@ -223,6 +228,9 @@
     /* Fallback.  */
     {
       /* Approach based on the directory entry.  */
+      WIN32_FIND_DATA info;
+      HANDLE h;
+	  unsigned int mode;
 
       if (strchr (rname, '?') != NULL || strchr (rname, '*') != NULL)
         {
@@ -243,8 +251,7 @@
          <https://docs.microsoft.com/en-us/windows/desktop/api/fileapi/nf-fileapi-findfirstfileexa>
          <https://docs.microsoft.com/en-us/windows/desktop/api/minwinbase/ne-minwinbase-findex_info_levels>
          <https://docs.microsoft.com/en-us/windows/desktop/api/minwinbase/ns-minwinbase-_win32_find_dataa>  */
-      WIN32_FIND_DATA info;
-      HANDLE h = FindFirstFile (rname, &info);
+      h = FindFirstFile (rname, &info);
       if (h == INVALID_HANDLE_VALUE)
         goto failed;
 
@@ -273,7 +280,7 @@
 # endif
 
       /* st_mode.  */
-      unsigned int mode =
+      mode =
         /* XXX How to handle FILE_ATTRIBUTE_REPARSE_POINT ?  */
         ((info.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) ? _S_IFDIR | S_IEXEC_UGO : _S_IFREG)
         | S_IREAD_UGO

--- a/gettext-tools/gnulib-lib/stat.c	2020-05-11 15:31:23.451977300 +0800
+++ b/gettext-tools/gnulib-lib/stat.c	2020-05-11 15:31:29.518120400 +0800
@@ -83,8 +83,9 @@
       if (q > p && *q != '\0')
         {
           /* Found the next slash at q.  */
+          const char *r;
           q++;
-          const char *r = q;
+
           while (*r != '\0' && !ISSLASH (*r))
             r++;
           if (r > q && *r == '\0')
@@ -105,6 +106,13 @@
 rpl_stat (char const *name, struct stat *buf)
 {
 #ifdef WINDOWS_NATIVE
+  size_t len;
+  size_t drive_prefix_len;
+  size_t rlen;
+  bool check_dir;
+  const char *rname;
+  char *malloca_rname;
+
   /* Fill the fields ourselves, because the original stat function returns
      values for st_atime, st_mtime, st_ctime that depend on the current time
      zone.  See
@@ -123,13 +131,12 @@
         name++;
     }
 
-  size_t len = strlen (name);
-  size_t drive_prefix_len = (HAS_DEVICE (name) ? 2 : 0);
+  len = strlen (name);
+  drive_prefix_len = (HAS_DEVICE (name) ? 2 : 0);
 
   /* Remove trailing slashes (except the very first one, at position
      drive_prefix_len), but remember their presence.  */
-  size_t rlen;
-  bool check_dir = false;
+  check_dir = false;
 
   rlen = len;
   while (rlen > drive_prefix_len && ISSLASH (name[rlen-1]))
@@ -154,8 +161,6 @@
       return -1;
     }
 
-  const char *rname;
-  char *malloca_rname;
   if (rlen == len)
     {
       rname = name;
@@ -223,6 +228,9 @@
     /* Fallback.  */
     {
       /* Approach based on the directory entry.  */
+      WIN32_FIND_DATA info;
+      HANDLE h;
+	  unsigned int mode;
 
       if (strchr (rname, '?') != NULL || strchr (rname, '*') != NULL)
         {
@@ -243,8 +251,7 @@
          <https://docs.microsoft.com/en-us/windows/desktop/api/fileapi/nf-fileapi-findfirstfileexa>
          <https://docs.microsoft.com/en-us/windows/desktop/api/minwinbase/ne-minwinbase-findex_info_levels>
          <https://docs.microsoft.com/en-us/windows/desktop/api/minwinbase/ns-minwinbase-_win32_find_dataa>  */
-      WIN32_FIND_DATA info;
-      HANDLE h = FindFirstFile (rname, &info);
+      h = FindFirstFile (rname, &info);
       if (h == INVALID_HANDLE_VALUE)
         goto failed;
 
@@ -273,7 +280,7 @@
 # endif
 
       /* st_mode.  */
-      unsigned int mode =
+      mode =
         /* XXX How to handle FILE_ATTRIBUTE_REPARSE_POINT ?  */
         ((info.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) ? _S_IFDIR | S_IEXEC_UGO : _S_IFREG)
         | S_IREAD_UGO

--- a/gettext-tools/libgettextpo/stat.c	2020-05-11 15:31:23.451977300 +0800
+++ b/gettext-tools/libgettextpo/stat.c	2020-05-11 15:31:29.518120400 +0800
@@ -83,8 +83,9 @@
       if (q > p && *q != '\0')
         {
           /* Found the next slash at q.  */
+          const char *r;
           q++;
-          const char *r = q;
+
           while (*r != '\0' && !ISSLASH (*r))
             r++;
           if (r > q && *r == '\0')
@@ -105,6 +106,13 @@
 rpl_stat (char const *name, struct stat *buf)
 {
 #ifdef WINDOWS_NATIVE
+  size_t len;
+  size_t drive_prefix_len;
+  size_t rlen;
+  bool check_dir;
+  const char *rname;
+  char *malloca_rname;
+
   /* Fill the fields ourselves, because the original stat function returns
      values for st_atime, st_mtime, st_ctime that depend on the current time
      zone.  See
@@ -123,13 +131,12 @@
         name++;
     }
 
-  size_t len = strlen (name);
-  size_t drive_prefix_len = (HAS_DEVICE (name) ? 2 : 0);
+  len = strlen (name);
+  drive_prefix_len = (HAS_DEVICE (name) ? 2 : 0);
 
   /* Remove trailing slashes (except the very first one, at position
      drive_prefix_len), but remember their presence.  */
-  size_t rlen;
-  bool check_dir = false;
+  check_dir = false;
 
   rlen = len;
   while (rlen > drive_prefix_len && ISSLASH (name[rlen-1]))
@@ -154,8 +161,6 @@
       return -1;
     }
 
-  const char *rname;
-  char *malloca_rname;
   if (rlen == len)
     {
       rname = name;
@@ -223,6 +228,9 @@
     /* Fallback.  */
     {
       /* Approach based on the directory entry.  */
+      WIN32_FIND_DATA info;
+      HANDLE h;
+	  unsigned int mode;
 
       if (strchr (rname, '?') != NULL || strchr (rname, '*') != NULL)
         {
@@ -243,8 +251,7 @@
          <https://docs.microsoft.com/en-us/windows/desktop/api/fileapi/nf-fileapi-findfirstfileexa>
          <https://docs.microsoft.com/en-us/windows/desktop/api/minwinbase/ne-minwinbase-findex_info_levels>
          <https://docs.microsoft.com/en-us/windows/desktop/api/minwinbase/ns-minwinbase-_win32_find_dataa>  */
-      WIN32_FIND_DATA info;
-      HANDLE h = FindFirstFile (rname, &info);
+      h = FindFirstFile (rname, &info);
       if (h == INVALID_HANDLE_VALUE)
         goto failed;
 
@@ -273,7 +280,7 @@
 # endif
 
       /* st_mode.  */
-      unsigned int mode =
+      mode =
         /* XXX How to handle FILE_ATTRIBUTE_REPARSE_POINT ?  */
         ((info.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) ? _S_IFDIR | S_IEXEC_UGO : _S_IFREG)
         | S_IREAD_UGO
