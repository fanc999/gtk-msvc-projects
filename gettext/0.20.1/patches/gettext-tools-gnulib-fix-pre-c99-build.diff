--- a/gettext-tools/gnulib-lib/diffseq.h	2019-01-06 20:17:03.000000000 +0800
+++ b/gettext-tools/gnulib-lib/diffseq.h	2019-05-27 16:54:00.092982700 +0800
@@ -208,6 +208,7 @@
     {
       OFFSET d;                 /* Active diagonal. */
       bool big_snake _GL_UNUSED = false;
+      bool heuristic;
 
       /* Extend the top-down search by an edit step in each diagonal. */
       if (fmin > dmin)
@@ -279,9 +280,9 @@
         continue;
 
 #ifdef USE_HEURISTIC
-      bool heuristic = ctxt->heuristic;
+      heuristic = ctxt->heuristic;
 #else
-      bool heuristic = false;
+      heuristic = false;
 #endif
 
       /* Heuristic: check occasionally for a diagonal that has made lots
--- a/gettext-tools/gnulib-lib/gettimeofday.c	2019-03-21 05:00:06.000000000 +0800
+++ b/gettext-tools/gnulib-lib/gettimeofday.c	2019-05-17 10:53:54.123056900 +0800
@@ -83,6 +83,7 @@
      More discussion on this topic:
      <http://www.windowstimestamp.com/description>.  */
   FILETIME current_time;
+  ULONGLONG since_1601, since_1970, microseconds_since_1970;
 
   if (!initialized)
     initialize ();
@@ -93,14 +94,14 @@
 
   /* Convert from FILETIME to 'struct timeval'.  */
   /* FILETIME: <https://docs.microsoft.com/en-us/windows/desktop/api/minwinbase/ns-minwinbase-filetime> */
-  ULONGLONG since_1601 =
+  since_1601 =
     ((ULONGLONG) current_time.dwHighDateTime << 32)
     | (ULONGLONG) current_time.dwLowDateTime;
   /* Between 1601-01-01 and 1970-01-01 there were 280 normal years and 89 leap
      years, in total 134774 days.  */
-  ULONGLONG since_1970 =
+  since_1970 =
     since_1601 - (ULONGLONG) 134774 * (ULONGLONG) 86400 * (ULONGLONG) 10000000;
-  ULONGLONG microseconds_since_1970 = since_1970 / (ULONGLONG) 10;
+  microseconds_since_1970 = since_1970 / (ULONGLONG) 10;
   tv->tv_sec = microseconds_since_1970 / (ULONGLONG) 1000000;
   tv->tv_usec = microseconds_since_1970 % (ULONGLONG) 1000000;
 
--- a/gettext-tools/gnulib-lib/stat.c	2019-03-21 05:00:09.000000000 +0800
+++ b/gettext-tools/gnulib-lib/stat.c	2019-05-17 10:59:07.977883700 +0800
@@ -82,9 +82,10 @@
         q++;
       if (q > p && *q != '\0')
         {
+          const char *r;
           /* Found the next slash at q.  */
           q++;
-          const char *r = q;
+          r = q;
           while (*r != '\0' && !ISSLASH (*r))
             r++;
           if (r > q && *r == '\0')
@@ -105,6 +106,17 @@
 rpl_stat (char const *name, struct stat *buf)
 {
 #ifdef WINDOWS_NATIVE
+  size_t len;
+  size_t drive_prefix_len;
+
+  /* Remove trailing slashes (except the very first one, at position
+     drive_prefix_len), but remember their presence.  */
+  size_t rlen;
+  bool check_dir;
+  const char *rname;
+  char *malloca_rname;
+  unsigned int mode;
+
   /* Fill the fields ourselves, because the original stat function returns
      values for st_atime, st_mtime, st_ctime that depend on the current time
      zone.  See
@@ -123,13 +135,13 @@
         name++;
     }
 
-  size_t len = strlen (name);
-  size_t drive_prefix_len = (HAS_DEVICE (name) ? 2 : 0);
+  len = strlen (name);
+  drive_prefix_len = (HAS_DEVICE (name) ? 2 : 0);
 
   /* Remove trailing slashes (except the very first one, at position
      drive_prefix_len), but remember their presence.  */
-  size_t rlen;
-  bool check_dir = false;
+  rlen;
+  check_dir = false;
 
   rlen = len;
   while (rlen > drive_prefix_len && ISSLASH (name[rlen-1]))
@@ -154,8 +166,6 @@
       return -1;
     }
 
-  const char *rname;
-  char *malloca_rname;
   if (rlen == len)
     {
       rname = name;
@@ -223,6 +233,8 @@
     /* Fallback.  */
     {
       /* Approach based on the directory entry.  */
+      WIN32_FIND_DATA info;
+      HANDLE h;
 
       if (strchr (rname, '?') != NULL || strchr (rname, '*') != NULL)
         {
@@ -243,8 +255,7 @@
          <https://docs.microsoft.com/en-us/windows/desktop/api/fileapi/nf-fileapi-findfirstfileexa>
          <https://docs.microsoft.com/en-us/windows/desktop/api/minwinbase/ne-minwinbase-findex_info_levels>
          <https://docs.microsoft.com/en-us/windows/desktop/api/minwinbase/ns-minwinbase-_win32_find_dataa>  */
-      WIN32_FIND_DATA info;
-      HANDLE h = FindFirstFile (rname, &info);
+      h = FindFirstFile (rname, &info);
       if (h == INVALID_HANDLE_VALUE)
         goto failed;
 
@@ -273,7 +284,7 @@
 # endif
 
       /* st_mode.  */
-      unsigned int mode =
+      mode =
         /* XXX How to handle FILE_ATTRIBUTE_REPARSE_POINT ?  */
         ((info.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) ? _S_IFDIR | S_IEXEC_UGO : _S_IFREG)
         | S_IREAD_UGO
--- a/gettext-tools/gnulib-lib/stat-w32.c	2019-03-21 05:00:09.000000000 +0800
+++ b/gettext-tools/gnulib-lib/stat-w32.c	2019-05-17 10:59:13.353881300 +0800
@@ -22,15 +22,15 @@
 
 /* Ensure that <windows.h> defines FILE_ID_INFO.  */
 #undef _WIN32_WINNT
-#define _WIN32_WINNT _WIN32_WINNT_WIN8
+#define _WIN32_WINNT 0x0602
 
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <errno.h>
 #include <limits.h>
 #include <string.h>
-#include <unistd.h>
 #include <windows.h>
+#include <unistd.h>
 
 /* Specification.  */
 #include "stat-w32.h"
@@ -132,6 +132,9 @@
   DWORD type = GetFileType (h);
   if (type == FILE_TYPE_DISK)
     {
+      BY_HANDLE_FILE_INFORMATION info;
+	  unsigned int mode;
+
       if (!initialized)
         initialize ();
 
@@ -148,7 +151,6 @@
          <https://docs.microsoft.com/en-us/windows/desktop/api/winbase/nf-winbase-getfileinformationbyhandleex>
          <https://docs.microsoft.com/en-us/windows/desktop/api/winbase/ns-winbase-_file_basic_info>
          The latter requires -D_WIN32_WINNT=_WIN32_WINNT_VISTA or higher.  */
-      BY_HANDLE_FILE_INFORMATION info;
       if (! GetFileInformationByHandle (h, &info))
         goto failed;
 
@@ -226,7 +228,7 @@
 #endif
 
       /* st_mode.  */
-      unsigned int mode =
+      mode =
         /* XXX How to handle FILE_ATTRIBUTE_REPARSE_POINT ?  */
         ((info.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) ? _S_IFDIR | S_IEXEC_UGO : _S_IFREG)
         | S_IREAD_UGO
--- a/gettext-tools/gnulib-lib/utime.c	2019-03-21 05:00:09.000000000 +0800
+++ b/gettext-tools/gnulib-lib/utime.c	2019-05-17 11:01:17.364881100 +0800
@@ -35,6 +35,15 @@
   /* POSIX <http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap04.html#tag_04_13>
      specifies: "More than two leading <slash> characters shall be treated as
      a single <slash> character."  */
+  size_t len;
+  size_t drive_prefix_len;
+  size_t rlen;
+  bool check_dir = false;
+  const char *rname;
+  char *malloca_rname;
+  DWORD error;
+  HANDLE handle;
+  
   if (ISSLASH (name[0]) && ISSLASH (name[1]) && ISSLASH (name[2]))
     {
       name += 2;
@@ -42,13 +51,11 @@
         name++;
     }
 
-  size_t len = strlen (name);
-  size_t drive_prefix_len = (HAS_DEVICE (name) ? 2 : 0);
+  len = strlen (name);
+  drive_prefix_len = (HAS_DEVICE (name) ? 2 : 0);
 
   /* Remove trailing slashes (except the very first one, at position
      drive_prefix_len), but remember their presence.  */
-  size_t rlen;
-  bool check_dir = false;
 
   rlen = len;
   while (rlen > drive_prefix_len && ISSLASH (name[rlen-1]))
@@ -59,8 +66,6 @@
       rlen--;
     }
 
-  const char *rname;
-  char *malloca_rname;
   if (rlen == len)
     {
       rname = name;
@@ -79,13 +84,11 @@
       rname = malloca_rname;
     }
 
-  DWORD error;
-
   /* Open a handle to the file.
      CreateFile
      <https://docs.microsoft.com/en-us/windows/desktop/api/fileapi/nf-fileapi-createfilea>
      <https://docs.microsoft.com/en-us/windows/desktop/FileIO/creating-and-opening-files>  */
-  HANDLE handle =
+  handle =
     CreateFile (rname,
                 FILE_READ_ATTRIBUTES | FILE_WRITE_ATTRIBUTES,
                 FILE_SHARE_READ | FILE_SHARE_WRITE | FILE_SHARE_DELETE,
