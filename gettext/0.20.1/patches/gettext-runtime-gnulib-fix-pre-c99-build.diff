--- a/gettext-runtime/gnulib-lib/stat.c	2019-03-21 04:59:16.000000000 +0800
+++ b/gettext-runtime/gnulib-lib/stat.c	2019-05-17 10:31:49.759857600 +0800
@@ -82,9 +82,10 @@
         q++;
       if (q > p && *q != '\0')
         {
+          const char *r;
           /* Found the next slash at q.  */
           q++;
-          const char *r = q;
+          r = q;
           while (*r != '\0' && !ISSLASH (*r))
             r++;
           if (r > q && *r == '\0')
@@ -105,6 +106,17 @@
 rpl_stat (char const *name, struct stat *buf)
 {
 #ifdef WINDOWS_NATIVE
+  size_t len;
+  size_t drive_prefix_len;
+
+  /* Remove trailing slashes (except the very first one, at position
+     drive_prefix_len), but remember their presence.  */
+  size_t rlen;
+  bool check_dir;
+  const char *rname;
+  char *malloca_rname;
+  unsigned int mode;
+
   /* Fill the fields ourselves, because the original stat function returns
      values for st_atime, st_mtime, st_ctime that depend on the current time
      zone.  See
@@ -123,13 +135,13 @@
         name++;
     }
 
-  size_t len = strlen (name);
-  size_t drive_prefix_len = (HAS_DEVICE (name) ? 2 : 0);
+  len = strlen (name);
+  drive_prefix_len = (HAS_DEVICE (name) ? 2 : 0);
 
   /* Remove trailing slashes (except the very first one, at position
      drive_prefix_len), but remember their presence.  */
-  size_t rlen;
-  bool check_dir = false;
+  rlen;
+  check_dir = false;
 
   rlen = len;
   while (rlen > drive_prefix_len && ISSLASH (name[rlen-1]))
@@ -154,8 +166,6 @@
       return -1;
     }
 
-  const char *rname;
-  char *malloca_rname;
   if (rlen == len)
     {
       rname = name;
@@ -223,6 +233,8 @@
     /* Fallback.  */
     {
       /* Approach based on the directory entry.  */
+      WIN32_FIND_DATA info;
+      HANDLE h;
 
       if (strchr (rname, '?') != NULL || strchr (rname, '*') != NULL)
         {
@@ -243,8 +255,7 @@
          <https://docs.microsoft.com/en-us/windows/desktop/api/fileapi/nf-fileapi-findfirstfileexa>
          <https://docs.microsoft.com/en-us/windows/desktop/api/minwinbase/ne-minwinbase-findex_info_levels>
          <https://docs.microsoft.com/en-us/windows/desktop/api/minwinbase/ns-minwinbase-_win32_find_dataa>  */
-      WIN32_FIND_DATA info;
-      HANDLE h = FindFirstFile (rname, &info);
+      h = FindFirstFile (rname, &info);
       if (h == INVALID_HANDLE_VALUE)
         goto failed;
 
@@ -273,7 +284,7 @@
 # endif
 
       /* st_mode.  */
-      unsigned int mode =
+      mode =
         /* XXX How to handle FILE_ATTRIBUTE_REPARSE_POINT ?  */
         ((info.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) ? _S_IFDIR | S_IEXEC_UGO : _S_IFREG)
         | S_IREAD_UGO
--- a/gettext-runtime/gnulib-lib/stat-w32.c	2019-03-21 04:59:16.000000000 +0800
+++ b/gettext-runtime/gnulib-lib/stat-w32.c	2019-05-17 10:31:45.144109900 +0800
@@ -22,15 +22,15 @@
 
 /* Ensure that <windows.h> defines FILE_ID_INFO.  */
 #undef _WIN32_WINNT
-#define _WIN32_WINNT _WIN32_WINNT_WIN8
+#define _WIN32_WINNT 0x0602
 
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <errno.h>
 #include <limits.h>
 #include <string.h>
-#include <unistd.h>
 #include <windows.h>
+#include <unistd.h>
 
 /* Specification.  */
 #include "stat-w32.h"
@@ -132,6 +132,9 @@
   DWORD type = GetFileType (h);
   if (type == FILE_TYPE_DISK)
     {
+      BY_HANDLE_FILE_INFORMATION info;
+	  unsigned int mode;
+
       if (!initialized)
         initialize ();
 
@@ -148,7 +151,6 @@
          <https://docs.microsoft.com/en-us/windows/desktop/api/winbase/nf-winbase-getfileinformationbyhandleex>
          <https://docs.microsoft.com/en-us/windows/desktop/api/winbase/ns-winbase-_file_basic_info>
          The latter requires -D_WIN32_WINNT=_WIN32_WINNT_VISTA or higher.  */
-      BY_HANDLE_FILE_INFORMATION info;
       if (! GetFileInformationByHandle (h, &info))
         goto failed;
 
@@ -226,7 +228,7 @@
 #endif
 
       /* st_mode.  */
-      unsigned int mode =
+      mode =
         /* XXX How to handle FILE_ATTRIBUTE_REPARSE_POINT ?  */
         ((info.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) ? _S_IFDIR | S_IEXEC_UGO : _S_IFREG)
         | S_IREAD_UGO
