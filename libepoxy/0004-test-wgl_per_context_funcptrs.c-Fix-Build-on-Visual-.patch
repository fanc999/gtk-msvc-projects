From 964bb4ac4fb93d997e59ceacd0c255fd52b9b33e Mon Sep 17 00:00:00 2001
From: Chun-wei Fan <fanchunwei@src.gnome.org>
Date: Fri, 5 Jun 2015 14:07:35 +0800
Subject: [PATCH 4/5] test/wgl_per_context_funcptrs.c: Fix Build on Visual
 Studio

Ensure that we do __stdcall only after the return type, as Visual Studio
will not like it otherwise.
---
 test/wgl_per_context_funcptrs.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/test/wgl_per_context_funcptrs.c b/test/wgl_per_context_funcptrs.c
index 6ed49df..c76c7b3 100644
--- a/test/wgl_per_context_funcptrs.c
+++ b/test/wgl_per_context_funcptrs.c
@@ -48,13 +48,13 @@
 static HGLRC ctx1, ctx2, current_context;
 static bool pass = true;
 
-#define OVERRIDE_API __declspec(dllexport) __stdcall
+#define OVERRIDE_API(type) __declspec(dllexport) type __stdcall
 
-OVERRIDE_API GLuint override_glCreateShader_ctx1(GLenum target);
-OVERRIDE_API GLuint override_glCreateShader_ctx2(GLenum target);
-OVERRIDE_API PROC override_wglGetProcAddress(LPCSTR name);
+OVERRIDE_API (GLuint) override_glCreateShader_ctx1(GLenum target);
+OVERRIDE_API (GLuint) override_glCreateShader_ctx2(GLenum target);
+OVERRIDE_API (PROC) override_wglGetProcAddress(LPCSTR name);
 
-OVERRIDE_API GLuint
+OVERRIDE_API (GLuint)
 override_glCreateShader_ctx1(GLenum target)
 {
     if (current_context != ctx1) {
@@ -64,7 +64,7 @@ override_glCreateShader_ctx1(GLenum target)
     return CREATESHADER_CTX1_VAL;
 }
 
-OVERRIDE_API GLuint
+OVERRIDE_API (GLuint)
 override_glCreateShader_ctx2(GLenum target)
 {
     if (current_context != ctx2) {
@@ -74,7 +74,7 @@ override_glCreateShader_ctx2(GLenum target)
     return CREATESHADER_CTX2_VAL;
 }
 
-OVERRIDE_API PROC
+OVERRIDE_API (PROC)
 override_wglGetProcAddress(LPCSTR name)
 {
     assert(strcmp(name, "glCreateShader") == 0);
-- 
2.3.5.windows.8

