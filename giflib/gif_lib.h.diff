--- a/lib/gif_lib.h	2016-04-02 23:35:30.000000000 +0800
+++ b/lib/gif_lib.h	2017-01-10 16:31:39.566460900 +0800
@@ -7,6 +7,19 @@
 #ifndef _GIF_LIB_H_
 #define _GIF_LIB_H_ 1
 
+#if defined (_MSC_VER) && !defined(GIFLIB_STATIC)
+#ifdef GIFLIB_BUILD
+#define GIF_FUNC __declspec(dllexport)
+#define GIF_EXTERN extern __declspec(dllexport)
+#else
+#define GIF_FUNC __declspec(dllimport)
+#define GIF_EXTERN extern __declspec(dllimport)
+#endif
+#else
+#define GIF_FUNC
+#define GIF_EXTERN extern
+#endif
+
 #ifdef __cplusplus
 extern "C" {
 #endif /* __cplusplus */
@@ -123,12 +136,18 @@
 ******************************************************************************/
 
 /* Main entry points */
+GIF_FUNC
 GifFileType *EGifOpenFileName(const char *GifFileName,
                               const bool GifTestExistence, int *Error);
+GIF_FUNC
 GifFileType *EGifOpenFileHandle(const int GifFileHandle, int *Error);
+GIF_FUNC
 GifFileType *EGifOpen(void *userPtr, OutputFunc writeFunc, int *Error);
+GIF_FUNC
 int EGifSpew(GifFileType * GifFile);
+GIF_FUNC
 const char *EGifGetGifVersion(GifFileType *GifFile); /* new in 5.x */
+GIF_FUNC
 int EGifCloseFile(GifFileType *GifFile, int *ErrorCode);
 
 #define E_GIF_SUCCEEDED          0
@@ -144,30 +163,42 @@
 #define E_GIF_ERR_NOT_WRITEABLE  10
 
 /* These are legacy.  You probably do not want to call them directly */
+GIF_FUNC
 int EGifPutScreenDesc(GifFileType *GifFile,
                       const int GifWidth, const int GifHeight, 
 		      const int GifColorRes,
                       const int GifBackGround,
                       const ColorMapObject *GifColorMap);
+GIF_FUNC
 int EGifPutImageDesc(GifFileType *GifFile, 
 		     const int GifLeft, const int GifTop,
                      const int GifWidth, const int GifHeight, 
 		     const bool GifInterlace,
                      const ColorMapObject *GifColorMap);
+GIF_FUNC
 void EGifSetGifVersion(GifFileType *GifFile, const bool gif89);
+GIF_FUNC
 int EGifPutLine(GifFileType *GifFile, GifPixelType *GifLine,
                 int GifLineLen);
+GIF_FUNC
 int EGifPutPixel(GifFileType *GifFile, const GifPixelType GifPixel);
+GIF_FUNC
 int EGifPutComment(GifFileType *GifFile, const char *GifComment);
+GIF_FUNC
 int EGifPutExtensionLeader(GifFileType *GifFile, const int GifExtCode);
+GIF_FUNC
 int EGifPutExtensionBlock(GifFileType *GifFile,
                          const int GifExtLen, const void *GifExtension);
+GIF_FUNC
 int EGifPutExtensionTrailer(GifFileType *GifFile);
+GIF_FUNC
 int EGifPutExtension(GifFileType *GifFile, const int GifExtCode, 
 		     const int GifExtLen,
                      const void *GifExtension);
+GIF_FUNC
 int EGifPutCode(GifFileType *GifFile, int GifCodeSize,
                 const GifByteType *GifCodeBlock);
+GIF_FUNC
 int EGifPutCodeNext(GifFileType *GifFile,
                     const GifByteType *GifCodeBlock);
 
@@ -176,10 +207,15 @@
 ******************************************************************************/
 
 /* Main entry points */
+GIF_FUNC
 GifFileType *DGifOpenFileName(const char *GifFileName, int *Error);
+GIF_FUNC
 GifFileType *DGifOpenFileHandle(int GifFileHandle, int *Error);
+GIF_FUNC
 int DGifSlurp(GifFileType * GifFile);
+GIF_FUNC
 GifFileType *DGifOpen(void *userPtr, InputFunc readFunc, int *Error);    /* new one (TVT) */
+GIF_FUNC
     int DGifCloseFile(GifFileType * GifFile, int *ErrorCode);
 
 #define D_GIF_SUCCEEDED          0
@@ -198,24 +234,36 @@
 #define D_GIF_ERR_EOF_TOO_SOON   113
 
 /* These are legacy.  You probably do not want to call them directly */
+GIF_FUNC
 int DGifGetScreenDesc(GifFileType *GifFile);
+GIF_FUNC
 int DGifGetRecordType(GifFileType *GifFile, GifRecordType *GifType);
+GIF_FUNC
 int DGifGetImageDesc(GifFileType *GifFile);
+GIF_FUNC
 int DGifGetLine(GifFileType *GifFile, GifPixelType *GifLine, int GifLineLen);
+GIF_FUNC
 int DGifGetPixel(GifFileType *GifFile, GifPixelType GifPixel);
+GIF_FUNC
 int DGifGetComment(GifFileType *GifFile, char *GifComment);
+GIF_FUNC
 int DGifGetExtension(GifFileType *GifFile, int *GifExtCode,
                      GifByteType **GifExtension);
+GIF_FUNC
 int DGifGetExtensionNext(GifFileType *GifFile, GifByteType **GifExtension);
+GIF_FUNC
 int DGifGetCode(GifFileType *GifFile, int *GifCodeSize,
                 GifByteType **GifCodeBlock);
+GIF_FUNC
 int DGifGetCodeNext(GifFileType *GifFile, GifByteType **GifCodeBlock);
+GIF_FUNC
 int DGifGetLZCodes(GifFileType *GifFile, int *GifCode);
 
 
 /******************************************************************************
  Color table quantization (deprecated)
 ******************************************************************************/
+GIF_FUNC
 int GifQuantizeBuffer(unsigned int Width, unsigned int Height,
                    int *ColorMapSize, GifByteType * RedInput,
                    GifByteType * GreenInput, GifByteType * BlueInput,
@@ -225,7 +273,8 @@
 /******************************************************************************
  Error handling and reporting.
 ******************************************************************************/
-extern const char *GifErrorString(int ErrorCode);     /* new in 2012 - ESR */
+GIF_EXTERN
+const char *GifErrorString(int ErrorCode);     /* new in 2012 - ESR */
 
 /*****************************************************************************
  Everything below this point is new after version 1.2, supporting `slurp
@@ -236,45 +285,49 @@
  Color map handling from gif_alloc.c
 ******************************************************************************/
 
-extern ColorMapObject *GifMakeMapObject(int ColorCount,
+GIF_EXTERN ColorMapObject *GifMakeMapObject(int ColorCount,
                                      const GifColorType *ColorMap);
-extern void GifFreeMapObject(ColorMapObject *Object);
-extern ColorMapObject *GifUnionColorMap(const ColorMapObject *ColorIn1,
+GIF_EXTERN void GifFreeMapObject(ColorMapObject *Object);
+GIF_EXTERN ColorMapObject *GifUnionColorMap(const ColorMapObject *ColorIn1,
                                      const ColorMapObject *ColorIn2,
                                      GifPixelType ColorTransIn2[]);
-extern int GifBitSize(int n);
+GIF_EXTERN int GifBitSize(int n);
 
-extern void *
+GIF_EXTERN void *
 reallocarray(void *optr, size_t nmemb, size_t size);
 
 /******************************************************************************
  Support for the in-core structures allocation (slurp mode).              
 ******************************************************************************/
 
-extern void GifApplyTranslation(SavedImage *Image, GifPixelType Translation[]);
-extern int GifAddExtensionBlock(int *ExtensionBlock_Count,
+GIF_EXTERN void GifApplyTranslation(SavedImage *Image, GifPixelType Translation[]);
+GIF_EXTERN int GifAddExtensionBlock(int *ExtensionBlock_Count,
 				ExtensionBlock **ExtensionBlocks, 
 				int Function, 
 				unsigned int Len, unsigned char ExtData[]);
-extern void GifFreeExtensions(int *ExtensionBlock_Count,
+GIF_EXTERN void GifFreeExtensions(int *ExtensionBlock_Count,
 			      ExtensionBlock **ExtensionBlocks);
-extern SavedImage *GifMakeSavedImage(GifFileType *GifFile,
+GIF_EXTERN SavedImage *GifMakeSavedImage(GifFileType *GifFile,
                                   const SavedImage *CopyFrom);
-extern void GifFreeSavedImages(GifFileType *GifFile);
+GIF_EXTERN void GifFreeSavedImages(GifFileType *GifFile);
 
 /******************************************************************************
  5.x functions for GIF89 graphics control blocks
 ******************************************************************************/
 
+GIF_FUNC
 int DGifExtensionToGCB(const size_t GifExtensionLength,
 		       const GifByteType *GifExtension,
 		       GraphicsControlBlock *GCB);
+GIF_FUNC
 size_t EGifGCBToExtension(const GraphicsControlBlock *GCB,
 		       GifByteType *GifExtension);
 
+GIF_FUNC
 int DGifSavedExtensionToGCB(GifFileType *GifFile, 
 			    int ImageIndex, 
 			    GraphicsControlBlock *GCB);
+GIF_FUNC
 int EGifGCBToSavedExtension(const GraphicsControlBlock *GCB, 
 			    GifFileType *GifFile, 
 			    int ImageIndex);
@@ -285,21 +338,22 @@
 
 #define GIF_FONT_WIDTH  8
 #define GIF_FONT_HEIGHT 8
-extern const unsigned char GifAsciiTable8x8[][GIF_FONT_WIDTH];
 
-extern void GifDrawText8x8(SavedImage *Image,
+GIF_EXTERN const unsigned char GifAsciiTable8x8[][GIF_FONT_WIDTH];
+
+GIF_EXTERN void GifDrawText8x8(SavedImage *Image,
                      const int x, const int y,
                      const char *legend, const int color);
 
-extern void GifDrawBox(SavedImage *Image,
+GIF_EXTERN void GifDrawBox(SavedImage *Image,
                     const int x, const int y,
                     const int w, const int d, const int color);
 
-extern void GifDrawRectangle(SavedImage *Image,
+GIF_EXTERN void GifDrawRectangle(SavedImage *Image,
                    const int x, const int y,
                    const int w, const int d, const int color);
 
-extern void GifDrawBoxedText8x8(SavedImage *Image,
+GIF_EXTERN void GifDrawBoxedText8x8(SavedImage *Image,
                           const int x, const int y,
                           const char *legend,
                           const int border, const int bg, const int fg);
